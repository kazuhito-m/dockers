# coding:utf-8

# sonarqubeの「DBの設定」だけを行う。
# ここだけ、Dockerでなく本体にセットアップ。

- name: sudoコマンドのインストール
  yum: name=sudo disable_gpg_check=no state=installed

- name: PostgreSQLサーバのインストール
  yum: name={{ item }} state=latest
  with_items:
    - postgresql-server
    - postgresql-devel
    - postgresql-contrib
    - python-psycopg2

- name: PostgreSQLサーバの初期化
  shell: '[ -e /var/lib/pgsql/data/postgresql.conf ] || service postgresql initdb'

- name: postgresql.confの外部からの接続を許可する
  lineinfile: >
    dest='/var/lib/pgsql/data/postgresql.conf'
    state=present
    backrefs=yes
    regexp='^#listen_addresses.*localhost.*'
    line="listen_addresses = '*'"

- name: PostgreSQLの設定ファイルpg_hba.confのコピー
  copy: >
    src=./resources/pg_hba.conf
    dest=/var/lib/pgsql/data/pg_hba.conf
    backup=yes

- name: PostgreSQLサーバの起動
  service: name=postgresql state=started  enabled=yes

- name: database作成
  postgresql_db:
    name: "sonarqube"
    encoding: "UTF-8"
    login_user: postgres
  sudo_user: postgres
  sudo: yes

- name: databaae内のuser作成
  postgresql_user:
    db: "sonarqube"
    name: "sonarqube"
    password: "sonarqube"
    priv: ALL
    state: present
    login_user: postgres
    role_attr_flags: CREATEDB
  sudo_user: postgres
  sudo: yes

- name: database内のsonarqubeユーザに権限を付与する
  postgresql_privs:
    type: database
    database: sonarqube
    privs: ALL
    objs: sonarqube
    login_user: postgres
    roles: sonarqube
  sudo_user: postgres
  sudo: yes

- name: database内にschemaを作成するｓ
  command: psql -d sonarqube -c "CREATE SCHEMA sonarqube AUTHORIZATION sonarqube;"
  sudo: yes
  sudo_user: postgres
  ignore_errors: True # versionが古すぎて…"CREATE SCHEMA IF NOT EXISTS"が使えないので、しょうがなく無視

- name: どのスキーマを優先して検索するかのsearch_pathの設定を行う
  command: psql -d sonarqube -c "ALTER USER sonarqube SET search_path to sonarqube;"
  sudo: yes
  sudo_user: postgres

- name: PostgreSQLサーバの再起動
  shell: service postgresql restart
